import numpy as np
import matplotlib.pyplot as plt
import math

# difine filename
filename = "koreha_gachi"

# patch info (パッチ番号, ξ方向のコントロールポイント個数, η方向のコントロールポイント個数)
patch0_info = np.array([0, 6, 6])
patch1_info = np.array([1, 6, 6])
patch2_info = np.array([2, 6, 6])
patch3_info = np.array([3, 6, 6])
patch4_info = np.array([4, 6, 6])

# パッチのコントロールポイント 座標，重み
patch0 = np.array([[1.00000000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [1.25000000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [1.75000000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [2.25000000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [2.75000000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [1.00000000000000000000, 0.09752680458061159519, 0.98096988312782174013],
                   [1.25423332871344195283, 0.13279827163072491225, 0.98334864773684405037],
                   [1.75902774164546205071, 0.20283173102377569097, 0.98810617695488855983],
                   [2.25898448319580280597, 0.27219402834849487638, 0.99286370617293318031],
                   [2.75417276408932698573, 0.34089476566537479929, 0.99762123539097768976],
                   [3.00000000000000000000, 0.37500000000000000000, 1.00000000000000000000],
                   [0.96193976625564348026, 0.29079789987237392168, 0.96193976625564348026],
                   [1.22547368779538601302, 0.39866544331559600201, 0.96669729547368787870],
                   [1.74483560299975493102, 0.61124640300284283079, 0.97621235390977711965],
                   [2.25417089439158591091, 0.81972334726251783188, 0.98572741234586636061],
                   [2.75376714187515680976, 1.02421398594250900871, 0.99524247078195537952],
                   [3.00000000000000000000, 1.12500000000000000000, 1.00000000000000000000],
                   [0.88581929876693032977, 0.47456896485780580841, 0.96193976625564336924],
                   [1.15919607233557697690, 0.65565344726240026851, 0.96669729547368798972],
                   [1.69795587928358493457, 1.01252736712041291334, 0.97621235390977711965],
                   [2.22631457334395088665, 1.36251160092681389280, 0.98572741234586636061],
                   [2.74457047537766607448, 1.70580375610083700977, 0.99524247078195537952],
                   [3.00000000000000000000, 1.87500000000000000000, 1.00000000000000000000],
                   [0.77606864605295333703, 0.63814491632014191946, 0.98096988312782174013],
                   [1.05876738152502802848, 0.89070730711771917143, 0.98334864773684405037],
                   [1.62008144263343289992, 1.39218397989130493464, 0.98810617695488855983],
                   [2.17601617920893497526, 1.88885477667596091145, 0.99286370617293318031],
                   [2.72664855120205817940, 2.38078845331195498858, 0.99762123539097768976],
                   [3.00000000000000000000, 2.62500000000000000000, 1.00000000000000000000],
                   [0.70710678118654757274, 0.70710678118654757274, 1.00000000000000000000],
                   [0.99371843353822875144, 0.99371843353822897349, 1.00000000000000000000],
                   [1.56694173824159199704, 1.56694173824159199704, 1.00000000000000000000],
                   [2.14016504294495479854, 2.14016504294495479854, 1.00000000000000000000],
                   [2.71338834764831782209, 2.71338834764831782209, 1.00000000000000000000],
                   [3.00000000000000000000, 3.00000000000000000000, 1.00000000000000000000]])

patch1 = np.array([[3.00000000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 0.00000000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 0.37500000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 0.37500000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 0.37500000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 0.37500000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 0.37500000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 0.37500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 1.12500000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 1.12500000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 1.12500000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 1.12500000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 1.12500000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 1.12500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 1.87500000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 1.87500000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 1.87500000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 1.87500000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 1.87500000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 1.87500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 2.62500000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 2.62500000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 2.62500000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 2.62500000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 2.62500000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 2.62500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 3.00000000000000000000, 1.00000000000000000000]])

patch2 = np.array([[3.00000000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [3.87500000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [5.62500000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [7.37500000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [9.12500000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [10.00000000000000000000, 10.00000000000000000000, 1.00000000000000000000]])

patch3 = np.array([[0.00000000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [0.37500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [1.12500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [1.87500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [2.62500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [0.00000000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [0.37500000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [1.12500000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [1.87500000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [2.62500000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 3.87500000000000000000, 1.00000000000000000000],
                   [0.00000000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [0.37500000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [1.12500000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [1.87500000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [2.62500000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 5.62500000000000000000, 1.00000000000000000000],
                   [0.00000000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [0.37500000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [1.12500000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [1.87500000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [2.62500000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 7.37500000000000000000, 1.00000000000000000000],
                   [0.00000000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [0.37500000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [1.12500000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [1.87500000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [2.62500000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 9.12500000000000000000, 1.00000000000000000000],
                   [0.00000000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [0.37500000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [1.12500000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [1.87500000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [2.62500000000000000000, 10.00000000000000000000, 1.00000000000000000000],
                   [3.00000000000000000000, 10.00000000000000000000, 1.00000000000000000000]])

patch4 = np.array([[0.70710678118654768376, 0.70710678118654757274, 1.00000000000000000000],
                   [0.99371843353822908451, 0.99371843353822897349, 1.00000000000000000000],
                   [1.56694173824159199704, 1.56694173824159199704, 1.00000000000000000000],
                   [2.14016504294495479854, 2.14016504294495479854, 1.00000000000000000000],
                   [2.71338834764831782209, 2.71338834764831782209, 1.00000000000000000000],
                   [3.00000000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [0.63814491632014214151, 0.77606864605295333703, 0.98096988312782174013],
                   [0.89070730711771939347, 1.05876738152502802848, 0.98334864773684405037],
                   [1.39218397989130604486, 1.62008144263343289992, 0.98810617695488855983],
                   [1.88885477667596091145, 2.17601617920893497526, 0.99286370617293318031],
                   [2.38078845331195498858, 2.72664855120205817940, 0.99762123539097768976],
                   [2.62500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [0.47456896485780608597, 0.88581929876693032977, 0.96193976625564336924],
                   [0.65565344726240060158, 1.15919607233557697690, 0.96669729547368798972],
                   [1.01252736712041291334, 1.69795587928358493457, 0.97621235390977711965],
                   [1.36251160092681389280, 2.22631457334395088665, 0.98572741234586636061],
                   [1.70580375610083700977, 2.74457047537766607448, 0.99524247078195537952],
                   [1.87500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [0.29079789987237431026, 0.96193976625564348026, 0.96193976625564348026],
                   [0.39866544331559622405, 1.22547368779538601302, 0.96669729547368787870],
                   [0.61124640300284294181, 1.74483560299975493102, 0.97621235390977711965],
                   [0.81972334726251783188, 2.25417089439158591091, 0.98572741234586636061],
                   [1.02421398594250900871, 2.75376714187515680976, 0.99524247078195537952],
                   [1.12500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [0.09752680458061180335, 1.00000000000000000000, 0.98096988312782174013],
                   [0.13279827163072510654, 1.25423332871344195283, 0.98334864773684405037],
                   [0.20283173102377580199, 1.75902774164546205071, 0.98810617695488855983],
                   [0.27219402834849487638, 2.25898448319580280597, 0.99286370617293318031],
                   [0.34089476566537479929, 2.75417276408932698573, 0.99762123539097768976],
                   [0.37500000000000000000, 3.00000000000000000000, 1.00000000000000000000],
                   [0.00000000000000012246, 1.00000000000000000000, 1.00000000000000000000],
                   [0.00000000000000010716, 1.25000000000000000000, 1.00000000000000000000],
                   [0.00000000000000007654, 1.75000000000000000000, 1.00000000000000000000],
                   [0.00000000000000004592, 2.25000000000000000000, 1.00000000000000000000],
                   [0.00000000000000001531, 2.75000000000000000000, 1.00000000000000000000],
                   [0.00000000000000000000, 3.00000000000000000000, 1.00000000000000000000]])
    


# 重複ありの総コントロールポイント数
allpointnumber_overlapping = patch0_info[1] * patch0_info[2] + patch1_info[1] * patch1_info[2] + patch2_info[1] * patch2_info[2] \
                           + patch3_info[1] * patch3_info[2] + patch4_info[1] * patch4_info[2]

globalpoint = np.zeros((allpointnumber_overlapping))
globalpoint_x = np.zeros((allpointnumber_overlapping))
globalpoint_y = np.zeros((allpointnumber_overlapping))
globalpoint_w = np.zeros((allpointnumber_overlapping))
globalpoint_bool = np.zeros((allpointnumber_overlapping), dtype = bool)

localpoint0 = np.zeros(int(patch0_info[1] * patch0_info[2]))
localpoint1 = np.zeros(int(patch1_info[1] * patch1_info[2]))
localpoint2 = np.zeros(int(patch2_info[1] * patch2_info[2]))
localpoint3 = np.zeros(int(patch3_info[1] * patch3_info[2]))
localpoint4 = np.zeros(int(patch4_info[1] * patch4_info[2]))

A0_i = np.zeros((2, patch0_info[2]))
A0_j = np.zeros((2, patch0_info[1]))
A1_i = np.zeros((2, patch1_info[2]))
A1_j = np.zeros((2, patch1_info[1]))
A2_i = np.zeros((2, patch2_info[2]))
A2_j = np.zeros((2, patch2_info[1]))
A3_i = np.zeros((2, patch3_info[2]))
A3_j = np.zeros((2, patch3_info[1]))
A4_i = np.zeros((2, patch4_info[2]))
A4_j = np.zeros((2, patch4_info[1]))

# globalpatch = patch0
length = int(globalpoint[globalpoint_bool].shape[0])
a_g = length
a_l_g = 0
a_l_l = 0
patch0_x = np.reshape(patch0[:,0], [patch0_info[1], patch0_info[2]]).T
patch0_y = np.reshape(patch0[:,1], [patch0_info[1], patch0_info[2]]).T
patch0_w = np.reshape(patch0[:,2], [patch0_info[1], patch0_info[2]]).T
for j in range(patch0_info[2]):
    for i in range(patch0_info[1]):
        localpoint0[a_l_g] = length + a_l_l
        globalpoint[a_g] = a_g
        globalpoint_bool[a_g] = True
        globalpoint_x[a_g] = patch0_x[i][j]
        globalpoint_y[a_g] = patch0_y[i][j]
        globalpoint_w[a_g] = patch0_w[i][j]
        a_g = a_g + 1
        a_l_g = a_l_g + 1
        a_l_l = a_l_l + 1
a_l_g = 0
for j in range(patch0_info[2]):
    for i in range(patch0_info[1]):
        if i == 0:
            A0_i[0,j] = localpoint0[a_l_g]
        if i == patch1_info[1] - 1:
            A0_i[1,j] = localpoint0[a_l_g]
        if j == 0:
            A0_j[0,i] = localpoint0[a_l_g]
        if j == patch1_info[2] - 1:
            A0_j[1,i] = localpoint0[a_l_g]
        a_l_g = a_l_g + 1

# globalpatch += patch1
length = int(globalpoint[globalpoint_bool].shape[0])
a_g = length
a_l_g = 0
a_l_l = 0
patch1_x = np.reshape(patch1[:,0], [patch1_info[1], patch1_info[2]]).T
patch1_y = np.reshape(patch1[:,1], [patch1_info[1], patch1_info[2]]).T
patch1_w = np.reshape(patch1[:,2], [patch1_info[1], patch1_info[2]]).T
for j in range(patch1_info[2]):
    for i in range(patch1_info[1]):
        if i == 0:
            localpoint1[a_l_g] = A0_i[1,j]
            a_l_g = a_l_g + 1
        else:
            localpoint1[a_l_g] = length + a_l_l
            globalpoint[a_g] = a_g
            globalpoint_bool[a_g] = True
            globalpoint_x[a_g] = patch1_x[i][j]
            globalpoint_y[a_g] = patch1_y[i][j]
            globalpoint_w[a_g] = patch1_w[i][j]
            a_g = a_g + 1
            a_l_g = a_l_g + 1
            a_l_l = a_l_l + 1
a_l_g = 0
for j in range(patch1_info[2]):
    for i in range(patch1_info[1]):
        if i == 0:
            A1_i[0,j] = localpoint1[a_l_g]
        if i == patch1_info[1] - 1:
            A1_i[1,j] = localpoint1[a_l_g]
        if j == 0:
            A1_j[0,i] = localpoint1[a_l_g]
        if j == patch1_info[2] - 1:
            A1_j[1,i] = localpoint1[a_l_g]
        a_l_g = a_l_g + 1

# globalpatch += patch2
length = int(globalpoint[globalpoint_bool].shape[0])
a_g = length
a_l_g = 0
a_l_l = 0
patch2_x = np.reshape(patch2[:,0], [patch2_info[1], patch2_info[2]]).T
patch2_y = np.reshape(patch2[:,1], [patch2_info[1], patch2_info[2]]).T
patch2_w = np.reshape(patch2[:,2], [patch2_info[1], patch2_info[2]]).T
for j in range(patch2_info[2]):
    for i in range(patch2_info[1]):
        if j == 0:
            localpoint2[a_l_g] = A1_j[1,i]
            a_l_g = a_l_g + 1
        else:
            localpoint2[a_l_g] = length + a_l_l
            globalpoint[a_g] = a_g
            globalpoint_bool[a_g] = True
            globalpoint_x[a_g] = patch2_x[i][j]
            globalpoint_y[a_g] = patch2_y[i][j]
            globalpoint_w[a_g] = patch2_w[i][j]
            a_g = a_g + 1
            a_l_g = a_l_g + 1
            a_l_l = a_l_l + 1
a_l_g = 0
for j in range(patch2_info[2]):
    for i in range(patch2_info[1]):
        if i == 0:
            A2_i[0,j] = localpoint2[a_l_g]
        if i == patch1_info[1] - 1:
            A2_i[1,j] = localpoint2[a_l_g]
        if j == 0:
            A2_j[0,i] = localpoint2[a_l_g]
        if j == patch1_info[2] - 1:
            A2_j[1,i] = localpoint2[a_l_g]
        a_l_g = a_l_g + 1

# globalpatch += patch3
length = int(globalpoint[globalpoint_bool].shape[0])
a_g = length
a_l_g = 0
a_l_l = 0
patch3_x = np.reshape(patch3[:,0], [patch3_info[1], patch3_info[2]]).T
patch3_y = np.reshape(patch3[:,1], [patch3_info[1], patch3_info[2]]).T
patch3_w = np.reshape(patch3[:,2], [patch3_info[1], patch3_info[2]]).T
for j in range(patch3_info[2]):
    for i in range(patch3_info[1]):
        if i == patch3_info[1] - 1:
            localpoint3[a_l_g] = A2_i[0,j]
            a_l_g = a_l_g + 1
        else:
            localpoint3[a_l_g] = length + a_l_l
            globalpoint[a_g] = a_g
            globalpoint_bool[a_g] = True
            globalpoint_x[a_g] = patch3_x[i][j]
            globalpoint_y[a_g] = patch3_y[i][j]
            globalpoint_w[a_g] = patch3_w[i][j]
            a_g = a_g + 1
            a_l_g = a_l_g + 1
            a_l_l = a_l_l + 1
a_l_g = 0
for j in range(patch3_info[2]):
    for i in range(patch3_info[1]):
        if i == 0:
            A3_i[0,j] = localpoint3[a_l_g]
        if i == patch1_info[1] - 1:
            A3_i[1,j] = localpoint3[a_l_g]
        if j == 0:
            A3_j[0,i] = localpoint3[a_l_g]
        if j == patch1_info[2] - 1:
            A3_j[1,i] = localpoint3[a_l_g]
        a_l_g = a_l_g + 1

# globalpatch += patch4
length = int(globalpoint[globalpoint_bool].shape[0])
a_g = length
a_l_g = 0
a_l_l = 0
patch4_x = np.reshape(patch4[:,0], [patch4_info[1], patch4_info[2]]).T
patch4_y = np.reshape(patch4[:,1], [patch4_info[1], patch4_info[2]]).T
patch4_w = np.reshape(patch4[:,2], [patch4_info[1], patch4_info[2]]).T
for j in range(patch4_info[2]):
    for i in range(patch4_info[1]):
        if i == patch4_info[1] - 1 and j == 0:
            localpoint4[a_l_g] = A3_j[0,patch3_info[2]-1-j]
            a_l_g = a_l_g + 1
        if i == patch4_info[1] - 1 and j != 0:
            localpoint4[a_l_g] = A3_j[0,patch3_info[2]-1-j]
            a_l_g = a_l_g + 1
        if j == 0 and i != patch4_info[1] - 1:
            localpoint4[a_l_g] = A0_j[1,i]
            a_l_g = a_l_g + 1
        if j != 0 and i != patch4_info[1] - 1:
            localpoint4[a_l_g] = length + a_l_l
            globalpoint[a_g] = a_g
            globalpoint_bool[a_g] = True
            globalpoint_x[a_g] = patch4_x[i][j]
            globalpoint_y[a_g] = patch4_y[i][j]
            globalpoint_w[a_g] = patch4_w[i][j]
            a_g = a_g + 1
            a_l_g = a_l_g + 1
            a_l_l = a_l_l + 1
a_l_g = 0
for j in range(patch4_info[2]):
    for i in range(patch4_info[1]):
        if i == 0:
            A4_i[0,j] = localpoint4[a_l_g]
        if i == patch1_info[1] - 1:
            A4_i[1,j] = localpoint4[a_l_g]
        if j == 0:
            A4_j[0,i] = localpoint4[a_l_g]
        if j == patch1_info[2] - 1:
            A4_j[1,i] = localpoint4[a_l_g]
        a_l_g = a_l_g + 1


# テキストデータ書き込み
def write_date_header(filename):
    filename_txt = filename + ".txt"
    f = open(filename_txt, 'w')
    f.write('patch connectivity')
    f.write('\n')

def write_date_localpoint(filename, localpoint):
    filename_txt = filename + ".txt"
    f = open(filename_txt, 'a')
    for i in range(localpoint.shape[0]):
        if i == 0:
            f.write(str(int(localpoint[i])))
        if i != 0 and i != localpoint.shape[0] - 1:
            f.write('   ')
            f.write(str(int(localpoint[i])))
        if i == localpoint.shape[0] - 1:
            f.write('   ')
            f.write(str(int(localpoint[i])))
            f.write('\n')

def write_date_globalpoint(filename, globalpoint, globalpoint_bool, globalpoint_x, globalpoint_y, globalpoint_w):
    filename_txt = filename + ".txt"
    f = open(filename_txt, 'a')
    f.write('\n')
    A = np.zeros((globalpoint[globalpoint_bool].shape[0],4))
    for i in range(globalpoint[globalpoint_bool].shape[0]):
        A[i][0] = globalpoint[globalpoint_bool][i]
        A[i][1] = globalpoint_x[globalpoint_bool][i]
        A[i][2] = globalpoint_y[globalpoint_bool][i]
        A[i][3] = globalpoint_w[globalpoint_bool][i]
        f.write(str(int(A[i][0])))
        f.write('   ')
        f.write('   ')
        f.write(str('{:.21e}'.format(A[i][1])))
        f.write('   ')
        f.write('   ')
        f.write(str('{:.21e}'.format(A[i][2])))
        f.write('   ')
        f.write('   ')
        f.write(str('{:.21e}'.format(A[i][3])))
        f.write('\n')
    f.close()


write_date_header(filename)
write_date_localpoint(filename, localpoint0)
write_date_localpoint(filename, localpoint1)
write_date_localpoint(filename, localpoint2)
write_date_localpoint(filename, localpoint3)
write_date_localpoint(filename, localpoint4)
write_date_globalpoint(filename, globalpoint, globalpoint_bool, globalpoint_x, globalpoint_y, globalpoint_w)

def write_BC(filename, A, axis):
    filename_txt = filename + ".txt"
    f = open(filename_txt, 'a')
    f.write('\n')
    for i in range(6):
        f.write(str(int(A[axis,i])))
        f.write('\n')
    f.write('\n')

# 境界条件txt出力
filename = filename + '_BC'
filename_txt = filename + ".txt"
f = open(filename_txt, 'w')

write_BC(filename, A0_j, 0)
write_BC(filename, A1_j, 0)
write_BC(filename, A3_i, 0)
write_BC(filename, A4_j, 1)
write_BC(filename, A2_j, 1)
write_BC(filename, A3_j, 1)


# 描写
color = np.array(["r", "g", "b", "c", "m", "y", "k"])
fig = plt.figure()
ax1 = fig.add_subplot(1, 1, 1)

A = np.zeros((globalpoint[globalpoint_bool].shape[0],3))
for i in range(globalpoint[globalpoint_bool].shape[0]):
    A[i][0] = globalpoint[globalpoint_bool][i]
    A[i][1] = globalpoint_x[globalpoint_bool][i]
    A[i][2] = globalpoint_y[globalpoint_bool][i]
ax1.plot(A[:,1], A[:,2], c=color[0], marker="", linewidth=0.7)
for i in range(globalpoint[globalpoint_bool].shape[0]):
    ax1.text(A[i,1], A[i,2], str(int(A[i,0])), c=color[3], fontsize=6)


ax1.set_aspect('equal', adjustable='box')
ax1.set_axisbelow(True)
fig.set_figheight(9)
fig.set_figwidth(12)
ax1.grid()
ax1.set_xlim(-1, 11)
ax1.set_ylim(-1, 11)
plt.show()